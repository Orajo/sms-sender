<?php
namespace SmsZilla;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-08-02 at 10:25:21.
 */
class SmsSenderTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var SmsZilla
     */
    protected $object;
    
    protected $config;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->config = include  __DIR__ . '/config.php';
        $this->object = new SmsSender(new \SmsZilla\Adapter\MockAdapter());
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers SmsZilla\SmsSender::setText
     * @expectedException \InvalidArgumentException
     */
    public function testSetText()
    {
        $retVal = $this->object->setText('');
        $this->assertEquals($this->config['message'], $retVal->getText());
    }

    /**
     * @covers SmsZilla\SmsSender::getText
     */
    public function testGetText()
    {
        $retVal = $this->object->setText($this->config['message']);
        $this->assertEquals($this->config['message'], $retVal->getText());
    }

    /**
     * @covers SmsZilla\SmsSender::setMessage
     */
    public function testSetMessage()
    {
        $message = new MessageModel();
        $message->setText($this->config['message']);
        $this->object->setMessage($message);
        $this->assertAttributeEquals($this->config['message'], 'text', $message);
    }

    /**
     * @covers SmsZilla\SmsSender::getMessage
     */
    public function testGetMessage()
    {
        $message = new MessageModel();
        $message->setText($this->config['message']);
        $message->addRecipient('654789321');
        $testMsg = clone $message;
        $this->object->setMessage($message);
        $this->assertEquals($testMsg, $this->object->getMessage());
    }

    /**
     * @covers SmsZilla\SmsSender::setRecipient
     */
    public function testSetRecipient()
    {
        $this->object->setRecipient('654789321');
        $textVal = $this->object->getRecipients();
        $expected = array('48654789321');
        $this->assertEquals($expected, $textVal);
        $this->object->setRecipient('48147258369');
        $textVal = $this->object->getRecipients();
        $expected = array('48654789321', '48147258369');
        $this->assertEquals($expected, $textVal);
    }

    /**
     * @covers SmsZilla\SmsSender::getRecipients
     * @todo   Implement testGetRecipients().
     */
    public function testGetRecipients()
    {
        $phones = ['504324567', '48504324431', '504324561', '48000000000'];
        $phonesExpected = ['48504324567', '48504324431', '48504324561', '48000000000'];
        $this->object->setRecipient($phones);
        $testVal = $this->object->getRecipients();
        $this->assertEquals($phonesExpected, $testVal);
    }

    /**
     * @covers SmsZilla\SmsSender::send
     * @todo   Implement testSend().
     */
    public function testSend()
    {
        $message = new MessageModel();
        $message->setText($this->config['message']);
        $this->object->setMessage($message);
        $result = $this->object->send();
        $this->assertTrue($result);
        $messages = $this->object->getAdapter()->getSentMessages();
        $this->assertCount(1, $messages);
        
        $this->assertEquals($message, $messages[0]);
    }

    public function testSend2()
    {
        $this->object->setCountryCode(56);
        $this->object->setRecipient('695687123');
        $this->object->setText($this->config['message']);
        $result = $this->object->send();
        $this->assertTrue($result);
    }

    
    /**
     * @covers SmsZilla\SmsSender::getAdapter
     * @todo   Implement testGetAdapter().
     */
    public function testGetAdapter()
    {
        $expected = new \SmsZilla\Adapter\MockAdapter();
        $result = $this->object->getAdapter();
        $this->assertEquals($expected, $result);
    }
    
    /**
     * @covers \SmsZilla\SmsSender::setCountryCode
     */
    public function testSetCountryCode() {
        $this->object->setRecipient('695687123');
        $result = $this->object->getRecipients();
        $this->assertEquals('48695687123', $result[0]);
        $this->object->setCountryCode(56);
        $this->object->setRecipient('852741963');
        $result = $this->object->getRecipients();
        $this->assertEquals('56852741963', $result[1]);
    }
    
}
