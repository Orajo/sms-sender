<?php
namespace SmsZilla;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-08-01 at 16:23:24.
 */
class MessageModelTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var MessageModel
     */
    protected $object;
    
    private $config = [];

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->config = include  __DIR__ . '/config.php';
        $this->object = new MessageModel;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers SmsZilla\MessageModel::setText
     */
    public function testSetText()
    {
        $retVal = $this->object->setText($this->config['message']);
        $this->assertEquals($this->config['message'], $retVal->getText());
    }
    
    /**
     * @expectedException InvalidArgumentException
     */
    public function testSetTextEmpty() {
        $this->object->setText('');
    }

    /**
     * @covers SmsZilla\MessageModel::getText
     */
    public function testGetText()
    {
        $retVal = $this->object->setText($this->config['message']);
        $this->assertEquals($this->config['message'], $this->object->getText());
    }

    /**
     * @covers SmsZilla\MessageModel::addRecipient
     * @expectedException InvalidArgumentException
     */
    public function testAddRecipient()
    {
        $this->object->addRecipient('');
    }
    
    /**
     * @covers SmsZilla\MessageModel::getRecipient
     */
    public function testGetRecipient()
    {
        
        $this->addRecipients();
        $retVal = $this->object->getRecipient();

        foreach ($this->config['phones'] as $phone) {
            $this->assertEquals($phone, $retVal->current(), $phone);
            $retVal->next();
        }
    }
    
    /**
     * @covers SmsZilla\MessageModel::getRecipients
     */
    public function testGetRecipients() {
        $this->addRecipients();
        $retVal = $this->object->getRecipients();
        $this->assertCount(4, $retVal);
    }
    
    private function addRecipients()
    {
        foreach ($this->config['phones'] as $phone) {
            $this->object->addRecipient($phone);            
        }
    }
}
